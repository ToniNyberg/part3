{"version":3,"sources":["Filter.js","services/personservice.js","PersonForm.js","Persons.js","components/Notification.js","components/ErrorNotification.js","App.js","index.js"],"names":["Filter","setSearchTerm","type","onChange","event","target","value","handleFilter","baseUrl","personservice","getAll","axios","get","create","newObject","post","update","id","put","remove","delete","PersonForm","newName","newNumber","setNewName","setNewNumber","persons","setPersons","setAlertMessage","setErrorMessage","onSubmit","preventDefault","existingPerson","find","person","name","window","confirm","number","then","res","map","data","setTimeout","catch","error","filter","personObject","Math","floor","random","response","concat","Persons","searchTerm","Person","val","toLowerCase","includes","onClick","p","Notification","message","className","ErrorNotification","App","useState","alertMessage","errorMessage","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.227cfbcf.chunk.js","sourcesContent":["import { React } from 'react'\r\n\r\n\r\nconst Filter = ({ setSearchTerm }) => {\r\n\r\n    const handleFilter = (event) => {\r\n        setSearchTerm(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <input type=\"text\" onChange={event => handleFilter(event)} />\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import axios from 'axios'\r\nconst baseUrl = 'https://nameless-island-18183.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\nconst personservice = {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}\r\n\r\nexport default personservice","import React from 'react'\r\nimport personservice from './services/personservice'\r\n\r\nconst PersonForm = ({ newName, newNumber, setNewName, setNewNumber, persons, setPersons, setAlertMessage, setErrorMessage }) => {\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        const existingPerson = persons.find(person => person.name === newName)\r\n\r\n        if (!existingPerson) {\r\n            const personObject = {\r\n                name: newName,\r\n                number: newNumber,\r\n                id: Math.floor(Math.random() * 1000)\r\n            }\r\n            personservice\r\n                .create(personObject)\r\n                .then(response => {\r\n                    setPersons(persons.concat(response.data))\r\n                    setAlertMessage(\r\n                        `'${newName}' was succesfully added to the phonebook`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setAlertMessage(null)\r\n                    }, 5000)\r\n                    setNewName('')\r\n                    setNewNumber(\"\")\r\n                })\r\n        } else {\r\n            const { id } = existingPerson\r\n            window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n            personservice\r\n                .update(id, { ...existingPerson, name: newName, number: newNumber })\r\n                .then(res => {\r\n                    setPersons(persons.map(person => person.id !== id ? person : res.data))\r\n                    setAlertMessage(\r\n                        `'${newName}'s number was succesfully updated`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setAlertMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    setPersons(persons.filter(person => person.id !== id))\r\n                    setErrorMessage(\r\n                        `'${newName}' was already deleted from the phonebook`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    }, 5000)\r\n                })\r\n            setNewName('')\r\n            setNewNumber(\"\")\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input value={newNumber} onChange={handleNumberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\nimport personservice from './services/personservice'\r\n\r\nconst Persons = ({ persons, searchTerm, setPersons }) => {\r\n\r\n    const Person = ({ data }) => {\r\n        const { name, number, id } = data\r\n        return (\r\n            <ul key={id}>{name} {number}</ul>\r\n        )\r\n    }\r\n\r\n    const removePerson = (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete?\")) {\r\n            personservice\r\n                .remove(id)\r\n                .then(res => {\r\n                    setPersons(persons.filter(p => p.id !== id))\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {persons.filter((val) => val.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                .map((data) => <span key={data.id}><Person data={data} />\r\n                    <button onClick={() => removePerson(data.id)}>delete</button>\r\n                </span>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"alert\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorNotification\r\n","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport personservice from './services/personservice'\nimport Notification from './components/Notification'\nimport ErrorNotification from './components/ErrorNotification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [alertMessage, setAlertMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personservice\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={alertMessage} />\n      <ErrorNotification message={errorMessage} />\n      <div><span>Filter shown with:</span> <Filter setSearchTerm={setSearchTerm} /></div>\n      <h2>Add a new</h2>\n      <PersonForm newName={newName} newNumber={newNumber} setNewName={setNewName} setNewNumber={setNewNumber}\n        persons={persons} setPersons={setPersons} setAlertMessage={setAlertMessage} setErrorMessage={setErrorMessage} />\n      <h2>Numbers</h2>\n      <div>\n        <Persons persons={persons} searchTerm={searchTerm} setPersons={setPersons} />\n      </div>\n    </div>\n\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport \"./index.css\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}